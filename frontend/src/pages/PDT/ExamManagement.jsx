import React, { useState, useEffect } from "react";
import axios from "axios";

export default function ExamManagement() {
    const [file, setFile] = useState(null);
    const [data, setData] = useState([]); // lu√¥n kh·ªüi t·∫°o l√† []
    const [from, setFrom] = useState("");
    const [to, setTo] = useState("");

    // üîç H√†m t√¨m ki·∫øm
    const handleSearch = async () => {
        try {
            const res = await axios.get("http://localhost:8000/api/exam-sessions", { params: { from, to } });
            console.log("D·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c:", res.data);

            // ki·ªÉm tra d·ªØ li·ªáu tr·∫£ v·ªÅ c√≥ ƒë√∫ng ƒë·ªãnh d·∫°ng kh√¥ng
            const fetchedData = Array.isArray(res.data.data) ? res.data.data : [];
            setData(fetchedData);
        } catch (error) {
            console.error("L·ªói khi t·∫£i d·ªØ li·ªáu:", error);
            setData([]);
        }
    };

    // üì§ Import file Excel
    const handleImport = async (e) => {
        e.preventDefault();
        if (!file) {
            alert("Vui l√≤ng ch·ªçn file tr∆∞·ªõc khi import!");
            return;
        }

        try {
            const formData = new FormData();
            formData.append("file", file);
            await axios.post("http://localhost:8000/api/exam-sessions/import", formData, {
                headers: { "Content-Type": "multipart/form-data" },
            });
            alert("Import th√†nh c√¥ng!");
            handleSearch(); // load l·∫°i d·ªØ li·ªáu
        } catch (error) {
            console.error("üî• Chi ti·∫øt l·ªói import:", error.response?.data || error.message || error);
            alert("Import th·∫•t b·∫°i! Xem console ƒë·ªÉ bi·∫øt chi ti·∫øt.");
        }
    };

    // üì¶ Xu·∫•t file Excel
    const handleExport = () => {
        window.location.href = `/api/exam-sessions/export?from=${from}&to=${to}`;
    };

    // üîÅ G·ªçi khi component mount
    useEffect(() => {
        handleSearch();
    }, []);

    return (
        <div className="p-8">
            <h1 className="text-2xl font-bold mb-6">üìò Qu·∫£n l√Ω k·ª≥ thi (Ph√≤ng ƒê√†o T·∫°o)</h1>

            {/* üîé B·ªô l·ªçc t√¨m ki·∫øm */}
            <div className="flex gap-4 mb-4">
                <input
                    type="date"
                    value={from}
                    onChange={(e) => setFrom(e.target.value)}
                    className="border p-2 rounded"
                />
                <input
                    type="date"
                    value={to}
                    onChange={(e) => setTo(e.target.value)}
                    className="border p-2 rounded"
                />
                <button
                    onClick={handleSearch}
                    className="bg-blue-500 text-white px-4 py-2 rounded"
                >
                    T√¨m ki·∫øm
                </button>
                <button
                    onClick={handleExport}
                    className="bg-green-500 text-white px-4 py-2 rounded"
                >
                    Xu·∫•t Excel
                </button>
            </div>

            {/* üìÇ Import Excel */}
            <form onSubmit={handleImport} className="flex items-center gap-3 mb-6">
                <input type="file" onChange={(e) => setFile(e.target.files[0])} />
                <button
                    type="submit"
                    className="bg-purple-500 text-white px-4 py-2 rounded"
                >
                    Import Excel
                </button>
            </form>

            {/* üìã B·∫£ng d·ªØ li·ªáu */}
            <table className="min-w-full border border-gray-300 shadow-sm rounded-lg overflow-hidden">
                <thead className="bg-gray-100">
                    <tr>
                        <th className="p-3 border text-left">M√£ ca thi</th>
                        <th className="p-3 border text-left">T√™n k·ª≥ thi</th>
                        <th className="p-3 border text-left">M√£ l·ªõp</th>
                        <th className="p-3 border text-left">M√¥n h·ªçc</th>
                        <th className="p-3 border text-left">Ng√†y thi</th>
                        <th className="p-3 border text-left">Gi·ªù b·∫Øt ƒë·∫ßu</th>
                        <th className="p-3 border text-left">Gi·ªù k·∫øt th√∫c</th>
                        <th className="p-3 border text-left">Ph√≤ng thi</th>
                        <th className="p-3 border text-left">T·ªïng SV</th>
                        <th className="p-3 border text-left">T·ªïng m√°y</th>
                        <th className="p-3 border text-left">GV ph√¢n c√¥ng 1</th>
                        <th className="p-3 border text-left">GV ph√¢n c√¥ng 2</th>
                        <th className="p-3 border text-left">GV th·ª±c t·∫ø 1</th>
                        <th className="p-3 border text-left">GV th·ª±c t·∫ø 2</th>
                        <th className="p-3 border text-left">T√¨nh tr·∫°ng</th>
                        <th className="p-3 border text-left">S·ªë t√≠n ch·ªâ</th>
                        <th className="p-3 border text-left">L·ªõp sinh vi√™n</th>
                        <th className="p-3 border text-left">Ca thi</th>
                        <th className="p-3 border text-left">S·ªë l∆∞·ª£ng SV</th>
                        <th className="p-3 border text-left">Th·ªùi l∆∞·ª£ng (ph√∫t)</th>
                        <th className="p-3 border text-left">H√¨nh th·ª©c thi</th>
                        <th className="p-3 border text-left">Khoa</th>
                        <th className="p-3 border text-left">B·∫≠c ƒë√†o t·∫°o</th>
                        <th className="p-3 border text-left">H·ªá ƒë√†o t·∫°o</th>
                        <th className="p-3 border text-left">ƒê·ª£t thi</th>
                        <th className="p-3 border text-left">Gi·∫£ng vi√™n</th>
                        <th className="p-3 border text-left">Ng√†y t·∫°o</th>
                        <th className="p-3 border text-left">K·∫øt qu·∫£</th>
                    </tr>
                </thead>

                <tbody>
                    {Array.isArray(data) && data.length > 0 ? (
                        data.map((item) => (
                            <tr key={item.exam_session_id} className="hover:bg-gray-50">
                                <td className="border p-2">{item.exam_code}</td>
                                <td className="border p-2">{item.exam_name}</td>
                                <td className="border p-2">{item.class_code}</td>
                                <td className="border p-2">{item.subject_name}</td>
                                <td className="border p-2">{item.exam_date}</td>
                                <td className="border p-2">{item.exam_start_time}</td>
                                <td className="border p-2">{item.exam_end_time}</td>
                                <td className="border p-2">{item.exam_room}</td>
                                <td className="border p-2 text-center">{item.total_students}</td>
                                <td className="border p-2 text-center">{item.total_computers}</td>
                                <td className="border p-2">{item.teacher1_name}</td>
                                <td className="border p-2">{item.teacher2_name}</td>
                                <td className="border p-2">{item.actual_teacher1_id}</td>
                                <td className="border p-2">{item.actual_teacher2_id}</td>
                                <td className="border p-2">{item.status}</td>
                                <td className="border p-2">{item.credits}</td>
                                <td className="border p-2">{item.student_class}</td>
                                <td className="border p-2">{item.exam_time}</td>
                                <td className="border p-2 text-center">{item.student_count}</td>
                                <td className="border p-2 text-center">{item.exam_duration}</td>
                                <td className="border p-2">{item.exam_method}</td>
                                <td className="border p-2">{item.exam_faculty}</td>
                                <td className="border p-2">{item.education_level}</td>
                                <td className="border p-2">{item.training_system}</td>
                                <td className="border p-2">{item.exam_batch}</td>
                                <td className="border p-2">
                                    {item.exam_teacher
                                        ? item.exam_teacher.split(",")[0]?.trim()
                                        : item.assigned_teacher1_id || ""}
                                </td>
                                <td className="border p-2">
                                    {item.exam_teacher
                                        ? item.exam_teacher.split(",")[1]?.trim()
                                        : item.assigned_teacher2_id || ""}
                                </td>

                                <td className="border p-2">{item.created_at}</td>
                                <td className="border p-2">
                                    <a
                                        href={`/api/exam-sessions/${item.exam_session_id}/report`}
                                        className="text-blue-600 underline"
                                    >
                                        Xu·∫•t PDF
                                    </a>
                                </td>
                            </tr>
                        ))
                    ) : (
                        <tr>
                            <td colSpan="28" className="text-center p-4 text-gray-500">
                                Kh√¥ng c√≥ d·ªØ li·ªáu
                            </td>
                        </tr>
                    )}
                </tbody>
            </table>
        </div>
    );
}
